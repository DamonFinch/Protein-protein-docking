.. highlight:: rst

Installation
=========================

This page gives an overview of installation/test procedure of DeepRank. DeepRank aims at ranking protein-protein conformations using a deep learning approach. More precisely, for a given conformation, the code computes a series of molecular features and map these features on a 3D grid centered around the interface. This volumetric data is then used as an input of 3D convolutional neural network that predicts how close the conformation is from the native one.

At the moment the code allows to:

	- Create one/multiple HDF5 files containing all the data (structures, features, mapped features, targets) required to use deep learning.

	- Train convolutional neural networks to predict possible targets (binary class, haddock-score ...) from the mapped feataures

GitHub
-------------


The code is hosted on GitHub_ (https://github.com/DeepRank/deeprank)

.. _GitHub: https://github.com/DeepRank/deeprank

To install the code

 * clone the repository ``git clone https://github.com/DeepRank/deeprank.git``
 * go there ``cd deeprank``
 * install the module ``pip insall -e ./``

Test the installation
----------------------

To test the module go to the test folder ``cd ./test`` and execute the following test:

	- Atomic Features : ``python test_atomic_features.py``
	- RMSD and dockQ : ``python test_rmsd.py``
	- Generate Data : ``python test_generate.py``
	- Generate Data (CUDA): ``python notravis_test_generate_cuda.py``
	- Deep learning: ``python notravis_test_learn.py``

These tests (except the notravis ones) are automatically run on Travis CI at each new push. So if the build button display passing they should work !

Requiried Dependencies
------------------------

The code is written in Python3. Several packages are required to run the code but most are pretty standard. Here is an non-exhaustive list of dependencies

  * Numpy (http://www.numpy.org)

  * Scipy (https://www.scipy.org/)

  * PyTorch (http://pytorch.org)

  * h5py (http://www.h5py.org/)

  * pickle ()

  * matplotlib

The deep learning was implemented with PyTorch 2. (http://www.pytorch.org)
To install pytorch with anaconda

```
conda install pytorch torchvision cuda80 -c soumith
```

Optional dependencies
------------------------

Network visualization

  *  tensorboard (https://github.com/lanpa/tensorboard-pytorch)

It is possible to visualize the parameters of the CNN using tensorboard. This is not required but could help in finding better architectures. You first have to install tensorflow and then install pytorch-tensorboard with pip

```
pip install tensorflow-tensorboard
pip install tensorboard-pytorch
```

Feature visualization

  *  VMD (http://www.ks.uiuc.edu/Research/vmd/)

The code can output visualization file of the mapped features that can be used in VMD We can develop other stategies using pyMol or other softwares in the future. All the features are exported as .cube files which is pretty standard format. The code also outputs VMD script that automatically load all the data. The tool https://github.com/DeepRank/DeepXplorer can be really usefull to explore the HDF5 files generated by DeepRank